services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: bash ./start.sh
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  db:
    container_name: db
    image: postgres
    command: -c 'max_connections=200'
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: base_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  queue:
    container_name: queue
    restart: always
    command: bash ./queue_start.sh
    env_file:
      - .env
    build:
      dockerfile: Dockerfile_queue
      context: .

volumes:
  backend:
  db: