"""<описаниÐcreate models

Revision ID: c0a01fdc1ee0
Revises: 
Create Date: 2025-09-21 18:27:28.141974

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c0a01fdc1ee0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("TRANSCRIPTION", "ANALYTIC", name="requesttypeopenai").create(op.get_bind())
    sa.Enum(
        "Received",
        "In processing",
        "Receiving transcription",
        "Error receiving transcription",
        "Receiving analytics",
        "Error receiving analytics",
        "Processing completed",
        name="callsessionstatus",
    ).create(op.get_bind())
    op.create_table(
        "call_sessions",
        sa.Column("session_id", sa.String(length=256), nullable=False),
        sa.Column("recording_url", sa.String(length=256), nullable=False),
        sa.Column("is_sales_line", sa.Boolean(), nullable=False),
        sa.Column("is_first_call", sa.Boolean(), nullable=False),
        sa.Column("script", sa.JSON(), nullable=False),
        sa.Column("transcription", sa.JSON(), nullable=True),
        sa.Column("analysis", sa.JSON(), nullable=True),
        sa.Column(
            "type_campaign",
            postgresql.ENUM(
                "Received",
                "In processing",
                "Receiving transcription",
                "Error receiving transcription",
                "Receiving analytics",
                "Error receiving analytics",
                "Processing completed",
                name="callsessionstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_call_sessions")),
    )
    op.create_table(
        "processing_logs",
        sa.Column("request", sa.JSON(), nullable=False),
        sa.Column("response", sa.JSON(), nullable=False),
        sa.Column(
            "request_type",
            postgresql.ENUM("TRANSCRIPTION", "ANALYTIC", name="requesttypeopenai", create_type=False),
            nullable=False,
        ),
        sa.Column("call_session_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["call_session_id"],
            ["call_sessions.id"],
            name=op.f("fk_processing_logs_call_session_id_call_sessions"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_processing_logs")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("processing_logs")
    op.drop_table("call_sessions")
    sa.Enum(
        "Received",
        "In processing",
        "Receiving transcription",
        "Error receiving transcription",
        "Receiving analytics",
        "Error receiving analytics",
        "Processing completed",
        name="callsessionstatus",
    ).drop(op.get_bind())
    sa.Enum("TRANSCRIPTION", "ANALYTIC", name="requesttypeopenai").drop(op.get_bind())
    # ### end Alembic commands ###
