"""update processing log model

Revision ID: 376998e87f8e
Revises: 90874da30758
Create Date: 2025-09-28 00:14:28.005078

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "376998e87f8e"
down_revision: Union[str, None] = "90874da30758"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "processing_logs",
        "request",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.alter_column(
        "processing_logs",
        "response",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="requesttypeopenai",
        new_values=["TRANSCRIPTION", "ANALYTIC", "DECODING"],
        affected_columns=[
            TableReference(table_schema="public", table_name="processing_logs", column_name="request_type")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="requesttypeopenai",
        new_values=["TRANSCRIPTION", "ANALYTIC"],
        affected_columns=[
            TableReference(table_schema="public", table_name="processing_logs", column_name="request_type")
        ],
        enum_values_to_rename=[],
    )
    op.alter_column(
        "processing_logs",
        "response",
        existing_type=sa.Text(),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=False,
    )
    op.alter_column(
        "processing_logs",
        "request",
        existing_type=sa.Text(),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
